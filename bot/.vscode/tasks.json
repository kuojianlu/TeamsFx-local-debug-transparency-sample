// This file is automatically generated by Teams Toolkit.
// See https://aka.ms/teamsfx-debug-tasks to know the details and how to customize each task.
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Teams App Locally",
            "dependsOn": [
                "Validate & Install prerequisites",
                "Install NPM packages",
                "Start local tunnel",
                "Prepare Teams App dependencies",
                "Build & Upload Teams manifest",
                "Start services"
            ],
            "dependsOrder": "sequence"
        },
        {
            "label": "Validate & Install prerequisites",
            "type": "teamsfx",
            "command": "check-prerequisites",
            // See https://aka.ms/teamsfx-debug-tasks#validate-and-install-prerequisites for
            // how to customize following args.
            "args": {
                "prerequisites": [
                    "nodejs", // Validate Node.js
                    "m365Account", // Validate M365 account
                    "ngrok", // Install Ngrok
                    "ports" // Validate available ports
                ],
                "ports": [
                    3978, // bot service port
                    9239 // bot debug port
                ]
            },
            "presentation": {
                "reveal": "never"
            }
        },
        {
            "label": "Install NPM packages",
            "type": "teamsfx",
            "command": "npm-install",
            "args": {
                "projects": [
                    {
                        "cwd": "${teamsfx:workspaceFolder}/bot",
                        "npmInstallArgs": "--no-audit",
                    }
                ],
                "forceUpdate": false // false: only install when dependency changes | true: always run npm install
            },
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "Start local tunnel",
            "type": "teamsfx",
            "command": "start-local-tunnel",
            "args": {
                "configFile": "${teamsfx:workspaceFolder}/.fx/configs/ngrok.yml",
                "binFolder": "${auto}",
                "reuse": false // false: auto-terminate when debug stops | true: keep executing when debug stops
            },
            "isBackground": true,
            "problemMatcher": "$teamsfx-local-tunnel-watch",
            "presentation": {
                "reveal": "silent"
            }
        },
        {
            "label": "Prepare Teams App dependencies",
            "type": "teamsfx",
            "command": "prepare-app-dependencies",
            // See https://aka.ms/teamsfx-debug-tasks#prepare-teams-app-dependencies for
            // how to customize following args and reuse your own resources.
            "args": {
                "enabledSteps": [
                    "registerBot", // Register Bot
                    "generateEnv", // Generate environment variables for local services
                ],
                "appConfigs": {
                    "botId": "${auto}",
                    "botPassword": "${auto}",
                    "botMessagingEndpoint": "${teamsfx:botTunnelEndpoint}/api/messages",
                }
            },
            "presentation": {
                "reveal": "never"
            }
        },
        {
            "label": "Build & Upload teams manifest",
            "type": "teamsfx",
            "command": "prepare-manifest",
            "args": {
                "manifestPackagePath": "${auto}"
            },
            "presentation": {
                "reveal": "never"
            }
        },
        {
            "label": "Start services",
            "dependsOn": [
                "Start bot"
            ]
        },
        {
            "label": "Start bot",
            "type": "shell",
            "command": "npm run dev:teamsfx",
            "isBackground": true,
            "options": {
                "cwd": "${workspaceFolder}/bot"
            },
            "problemMatcher": {
                "pattern": {
                    "regexp": "^.*$",
                    "file": 0,
                    "location": 1,
                    "message": 2
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "[nodemon] starting",
                    "endsPattern": "restify listening to|Bot/ME service listening at|[nodemon] app crashed"
                }
            }
        }
    ]
}
